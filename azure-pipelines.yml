trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]

steps:
- script: ls -l $(Build.Repository.LocalPath)/hello_world

- script: |
          echo "Downloading deps and creating zip file"
          pip install -r hello_world/requirements.txt --target ./package pyyaml
          cd package
          zip -r9 ../lambda_function.zip .
          cd ..
          zip -g lambda_function.zip hello_world

#- task: ArchiveFiles@2
#  displayName: 'Creating zip file'
#  inputs:
#    rootFolderOrFile: $(Build.Repository.LocalPath)/hello_world
#    includeRootFolder: false
#    archiveType: 'zip'
#    archiveFile: '$(Pipeline.Workspace)/lambda_function.zip'
#    replaceExistingArchive: true

- task: LambdaDeployFunction@1
  displayName: 'Deploying to AWS Lambda'
  #condition: and(succeeded(), eq(variables.isMain, true))
  inputs:
    awsCredentials: 'AWS (Hack4SSB)'
    regionName: 'eu-central-1'
    deploymentMode: 'codeonly'
    functionName: 'arn:aws:lambda:eu-central-1:205984356518:function:helloWorld'
    codeLocation: 'localfile'
    localZipFile: '$(Pipeline.Workspace)/lambda_function.zip'
    
